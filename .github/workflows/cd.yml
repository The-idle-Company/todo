name: "Deploy iOS app"

on:
  workflow_run:
    workflows: ["Build iOS app"]
    types:
      - completed

jobs:
  deploy:
    runs-on: macos-latest

    steps:
      - name: Set up job
        run: echo "Setting up job..."

      - name: Set debug logging
        run: echo "##[debug]Logging enabled"

      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # Decode and write the API Key File to a secure location
      - name: Decode API Key File
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY_JSON }}" | base64 --decode > ${{ runner.temp }}/api_key.json
        shell: bash

      # Install Ruby and Fastlane
      - name: Install Ruby and Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      # Optionally update Fastlane to the latest version
      - name: Update Fastlane
        run: |
          bundle update fastlane

      # Download the IPA file from S3
      - name: List and Download the Latest IPA from S3
        run: |
          LATEST_IPA=$(aws s3api list-objects-v2 --bucket ${{ secrets.AWS_S3_BUCKET }} --prefix ipa/ --query 'sort_by(Contents, &LastModified)[-1].Key' --output text)
          echo "Latest IPA: $LATEST_IPA"
          aws s3 cp s3://${{ secrets.AWS_S3_BUCKET }}/${LATEST_IPA} ${{ runner.temp }}/latest-Todo.ipa
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Check IPA File Presence
        run: |
            ls -l ${{ runner.temp }}
            if [ -f "${{ runner.temp }}/latest-Todo.ipa" ]; then
              echo "IPA file is ready for upload."
            else
              echo "IPA file not found, aborting."
              exit 1
            fi
        

      # Run Fastlane to upload IPA to TestFlight
      - name: Upload IPA to TestFlight using Fastlane
        run: |
          fastlane upload_ipa_to_testflight
        env:
          FASTLANE_APP_STORE_CONNECT_API_KEY_JSON: ${{ runner.temp }}/api_key.json

      # Cleanup API Key File securely
      - name: Cleanup API Key File
        if: always()
        run: rm -f ${{ runner.temp }}/api_key.json

      # Final step to indicate job completion
      - name: Complete job
        run: echo "Job complete"
